import { sendMessageToAPI, sendMessageStreaming } from "./api.js";
import { setupVoiceInput } from "./voice.js";
import { renderMessage, setupUI } from "./ui.js";

document.addEventListener("DOMContentLoaded", () => {
    setupUI();
    setupVoiceInput();
});

document.getElementById("send-button").addEventListener("click", sendMessage);

document.getElementById("user-input").addEventListener("keydown", (event) => {
    if (event.key === "Enter" && !event.shiftKey) {
        event.preventDefault();
        sendMessage();
    }
});

async function sendMessage() {
    const userInput = document.getElementById("user-input");
    const message = userInput.value.trim();
    if (!message) return;

    renderMessage(message, "user");
    userInput.value = "";

    try {
        console.log("üì© –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è:", message);

        // üìå –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
        const botMessageElement = renderMessage("", "bot");

        await sendMessageStreaming(message, (chunk) => {
            botMessageElement.textContent += chunk; // üìå –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        });

        console.log("‚úÖ –ü–æ—Ç–æ–∫–æ–≤—ã–π –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω.");
    } catch (error) {
        console.error("‚õî –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
        renderMessage(`‚õî –û—à–∏–±–∫–∞: ${error.message}`, "bot");
    }
}
