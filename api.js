export async function sendMessageStreaming(message, onData) {
    try {
        const apiKey = await fetchApiKeyFromServer();

        if (!apiKey) {
            throw new Error("‚ùå API-–∫–ª—é—á –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!");
        }

        console.log("üìå –ò—Å–ø–æ–ª—å–∑—É–µ–º API-–∫–ª—é—á:", apiKey);

        const requestBody = {
            model: "deepseek-chat",
            messages: [{ role: "user", content: message }],
            temperature: 0.7,
            max_tokens: 1000,
            stream: true // üìå –í–∫–ª—é—á–∞–µ–º –ø–æ—Ç–æ–∫–æ–≤—ã–π —Ä–µ–∂–∏–º
        };

        const response = await fetch("https://api.deepseek.com/chat/completions", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Authorization": `Bearer ${apiKey}`
            },
            body: JSON.stringify(requestBody)
        });

        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ API (${response.status}): ${response.statusText}`);
        }

        // üìå –ß–∏—Ç–∞–µ–º –ø–æ—Ç–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        const reader = response.body.getReader();
        const decoder = new TextDecoder();

        while (true) {
            const { done, value } = await reader.read();
            if (done) break;
            const chunk = decoder.decode(value, { stream: true });
            onData(chunk); // üìå –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ UI
        }

        console.log("‚úÖ –ü–æ—Ç–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã.");
    } catch (error) {
        console.error("‚õî –û—à–∏–±–∫–∞ API (Streaming):", error);
        throw new Error(`–û—à–∏–±–∫–∞ API (Streaming): ${error.message}`);
    }
}
