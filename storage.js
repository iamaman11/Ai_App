// storage.js - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏

// üìå –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ API-–∫–ª—é—á–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
export async function getStoredApiKey() {
    try {
        const response = await fetch("http://localhost:3001/api/getApiKey");
        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ (${response.status}): ${await response.text()}`);
        }
        const data = await response.json();
        console.log("üîë API-–∫–ª—é—á –ø–æ–ª—É—á–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞:", data.apiKey);
        return data.apiKey;
    } catch (error) {
        console.error("‚õî –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è API-–∫–ª—é—á–∞:", error);
        return null;
    }
}

// üìå –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ
export function saveMessage(message, sender) {
    chrome.storage.local.get("chatHistory", (data) => {
        let chatHistory = data.chatHistory || [];
        chatHistory.push({ sender, message });
        chrome.storage.local.set({ chatHistory });
    });
}

// üìå –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
export function loadChatHistory(callback) {
    chrome.storage.local.get("chatHistory", (data) => {
        callback(data.chatHistory || []);
    });
}

// üìå –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞
export function clearChatHistory() {
    chrome.storage.local.remove("chatHistory", () => {
        console.log("üßπ –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –æ—á–∏—â–µ–Ω–∞!");
    });
}
